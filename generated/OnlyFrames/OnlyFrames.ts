// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProductCreated extends ethereum.Event {
  get params(): ProductCreated__Params {
    return new ProductCreated__Params(this);
  }
}

export class ProductCreated__Params {
  _event: ProductCreated;

  constructor(event: ProductCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get product(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OnlyFrames__getProductResultValue0Struct extends ethereum.Tuple {
  get creator(): Address {
    return this[0].toAddress();
  }

  get productAddress(): Address {
    return this[1].toAddress();
  }

  get productName(): string {
    return this[2].toString();
  }

  get productDataURI(): string {
    return this[3].toString();
  }

  get previewImageURI(): string {
    return this[4].toString();
  }

  get price(): BigInt {
    return this[5].toBigInt();
  }

  get finiteSupply(): boolean {
    return this[6].toBoolean();
  }

  get supply(): BigInt {
    return this[7].toBigInt();
  }
}

export class OnlyFrames__getProductsResultValue0Struct extends ethereum.Tuple {
  get creator(): Address {
    return this[0].toAddress();
  }

  get productAddress(): Address {
    return this[1].toAddress();
  }

  get productName(): string {
    return this[2].toString();
  }

  get productDataURI(): string {
    return this[3].toString();
  }

  get previewImageURI(): string {
    return this[4].toString();
  }

  get price(): BigInt {
    return this[5].toBigInt();
  }

  get finiteSupply(): boolean {
    return this[6].toBoolean();
  }

  get supply(): BigInt {
    return this[7].toBigInt();
  }
}

export class OnlyFrames extends ethereum.SmartContract {
  static bind(address: Address): OnlyFrames {
    return new OnlyFrames("OnlyFrames", address);
  }

  getProduct(index: BigInt): OnlyFrames__getProductResultValue0Struct {
    let result = super.call(
      "getProduct",
      "getProduct(uint256):((address,address,string,string,string,uint256,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );

    return changetype<OnlyFrames__getProductResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getProduct(
    index: BigInt,
  ): ethereum.CallResult<OnlyFrames__getProductResultValue0Struct> {
    let result = super.tryCall(
      "getProduct",
      "getProduct(uint256):((address,address,string,string,string,uint256,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<OnlyFrames__getProductResultValue0Struct>(value[0].toTuple()),
    );
  }

  getProducts(
    _creator: Address,
  ): Array<OnlyFrames__getProductsResultValue0Struct> {
    let result = super.call(
      "getProducts",
      "getProducts(address):((address,address,string,string,string,uint256,bool,uint256)[])",
      [ethereum.Value.fromAddress(_creator)],
    );

    return result[0].toTupleArray<OnlyFrames__getProductsResultValue0Struct>();
  }

  try_getProducts(
    _creator: Address,
  ): ethereum.CallResult<Array<OnlyFrames__getProductsResultValue0Struct>> {
    let result = super.tryCall(
      "getProducts",
      "getProducts(address):((address,address,string,string,string,uint256,bool,uint256)[])",
      [ethereum.Value.fromAddress(_creator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<OnlyFrames__getProductsResultValue0Struct>(),
    );
  }

  getProductsCount(_creator: Address): BigInt {
    let result = super.call(
      "getProductsCount",
      "getProductsCount(address):(uint256)",
      [ethereum.Value.fromAddress(_creator)],
    );

    return result[0].toBigInt();
  }

  try_getProductsCount(_creator: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProductsCount",
      "getProductsCount(address):(uint256)",
      [ethereum.Value.fromAddress(_creator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get platformOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateProductCall extends ethereum.Call {
  get inputs(): CreateProductCall__Inputs {
    return new CreateProductCall__Inputs(this);
  }

  get outputs(): CreateProductCall__Outputs {
    return new CreateProductCall__Outputs(this);
  }
}

export class CreateProductCall__Inputs {
  _call: CreateProductCall;

  constructor(call: CreateProductCall) {
    this._call = call;
  }

  get _productOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _productName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _productDataURI(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _previewImageURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _price(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _finiteSupply(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }

  get _supply(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateProductCall__Outputs {
  _call: CreateProductCall;

  constructor(call: CreateProductCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
